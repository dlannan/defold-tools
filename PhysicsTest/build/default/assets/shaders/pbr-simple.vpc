
Ü	×	#version 140






#ifndef GL_ES
#define lowp
#define mediump
#define highp
#endif

in highp vec4 position;
in mediump vec2 texcoord0;
in mediump vec3 normal;

uniform mediump mat4 mtx_worldview;
uniform mediump mat4 mtx_view;
uniform mediump mat4 mtx_proj;
uniform mediump mat4 mtx_normal;
uniform mediump vec4 light;








out vec3 vvLocalSurfaceNormal ;
out vec3 vvLocalSurfaceToLightDirection;
out vec3 vvLocalReflectedSurfaceToViewerDirection;
out vec3 vvLocalSurfaceToViewerDirection;
out vec2 vuvCoord0 ;























void main()
{
	vec4 p = mtx_worldview * vec4(position.xyz, 1.0);
	vec3 vViewModelPosition = normalize(mtx_view * vec4(0.0, 0.0, 1.0, 0.0)).xyz;
	vvLocalSurfaceToViewerDirection = normalize(vViewModelPosition - p.xyz) ;

	vec3 vLightModelPosition = vec3(mtx_view * vec4(light.xyz, 1.0));
	vvLocalSurfaceToLightDirection = normalize(vLightModelPosition - p.xyz) ;

	vvLocalSurfaceNormal = normalize((mtx_normal * vec4(normal, 0.0)).xyz);
	

	vec3 vLocalSurfaceToViewerDirection = normalize(vViewModelPosition - position.xyz) ;
	vvLocalReflectedSurfaceToViewerDirection = normalize(reflect(vLocalSurfaceToViewerDirection, vvLocalSurfaceNormal)) ;

	vuvCoord0 = texcoord0 ;

	gl_Position = mtx_proj * p;
}
